Here's a breakdown with the correct order of webhook calls and how to wire it up in Replit:

‚úÖ FINAL ORDER OF OPERATIONS IN REPLIT
1. üîê POST to: https://applebites.ai/api/generate-token
Purpose: Generate token + assessment URL

Response:

json
Copy
Edit
{
  "token": "...",
  "type": "growth",
  "expiresAt": "...",
  "assessmentUrl": "http://applebites.ai/assessment/growth?token=..."
}
2. üîÅ POST to:
https://services.leadconnectorhq.com/hooks/QNFFrENaRuI2JhldFd0Z/webhook-trigger/0214e352-5c51-4222-bb9a-1e0fd02d8290
(this is your new webhook)

Purpose: Update the existing contact's custom field {{ contact.assessment_url }}

Payload should include at least:

json
Copy
Edit
{
  "email": "user@example.com",
  "assessmentUrl": "http://applebites.ai/assessment/growth?token=..."
}
Why now? So your email/text can reference {{ contact.assessment_url }} right away in the workflow!

3. üì® POST to your usual GHL Webhook
(You called this the one that handles assessment completion and score reporting)
Example:
https://services.leadconnectorhq.com/hooks/.../webhook-trigger/016d7395-74cf-4bd0-9c13-263f55efe657

Purpose: Submit score or results back into GHL or trigger the next stage (like PDF generation, follow-up workflows, etc.)

‚úÖ SAMPLE SEQUENCE IN JAVASCRIPT (REPLIT LOGIC)
Assuming you're doing this inside an async function:

js
Copy
Edit
// 1. Generate token
const tokenResponse = await fetch("https://applebites.ai/api/generate-token", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({ email: user.email, name: user.name })  // or whatever your params are
});

const tokenData = await tokenResponse.json();
const assessmentUrl = tokenData.assessmentUrl;

// 2. Update GHL contact with custom field (assessment_url)
await fetch("https://services.leadconnectorhq.com/hooks/QNFFrENaRuI2JhldFd0Z/webhook-trigger/0214e352-5c51-4222-bb9a-1e0fd02d8290", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    email: user.email,
    assessmentUrl: assessmentUrl
  })
});

// 3. (Optional) Start the workflow / wait for score submission later
// If you're also sending a start trigger for a separate pipeline workflow:
await fetch("https://services.leadconnectorhq.com/hooks/.../webhook-trigger/016d7395-74cf-4bd0-9c13-263f55efe657", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    email: user.email,
    token: tokenData.token
    // include score/results later if applicable
  })
});
