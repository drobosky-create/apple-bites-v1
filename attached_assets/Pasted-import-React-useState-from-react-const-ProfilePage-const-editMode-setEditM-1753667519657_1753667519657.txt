import React, { useState } from 'react';

const ProfilePage = () => {
  const [editMode, setEditMode] = useState(false);
  const [profile, setProfile] = useState({
    name: 'Daniel Robosky',
    email: 'daniel@applebites.ai',
    title: 'Director of Operations',
    company: 'Meritage Partners',
    about:
      "I’m like Thanos: decisive. If you can’t decide, the answer is no. The equally difficult path, the more painful one in the short term — that’s usually the right one.",
    twitter: '',
    linkedin: '',
    github: '',
  });

  const handleChange = (field: string, value: string) => {
    setProfile((prev) => ({ ...prev, [field]: value }));
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      {/* Header */}
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white">Profile</h1>
        <button
          onClick={() => setEditMode(!editMode)}
          className="px-4 py-2 bg-gradient-to-r from-[#00B4AA] to-[#002E4D] text-white rounded-md hover:from-[#008E88] hover:to-[#001C2F]"
        >
          {editMode ? 'Save' : 'Edit Profile'}
        </button>
      </div>

      {/* Avatar */}
      <div className="flex items-center mb-6">
        <img
          src="/avatar-placeholder.png"
          alt="Profile Avatar"
          className="w-20 h-20 rounded-full border border-white shadow-md"
        />
        <div className="ml-4">
          <h2 className="text-xl font-semibold text-gray-800 dark:text-white">{profile.name}</h2>
          <p className="text-gray-500">{profile.title}</p>
          <p className="text-gray-400">{profile.company}</p>
        </div>
      </div>

      {/* Form Fields */}
      <div className="space-y-4">
        {['name', 'email', 'title', 'company'].map((field) => (
          <div key={field}>
            <label className="block text-sm font-medium text-gray-700 capitalize">{field}</label>
            <input
              type="text"
              value={profile[field as keyof typeof profile]}
              onChange={(e) => handleChange(field, e.target.value)}
              disabled={!editMode}
              className={`mt-1 block w-full px-3 py-2 border ${
                editMode ? 'border-gray-300' : 'border-transparent'
              } rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#00B4AA]`}
            />
          </div>
        ))}

        <div>
          <label className="block text-sm font-medium text-gray-700">About</label>
          <textarea
            rows={4}
            value={profile.about}
            onChange={(e) => handleChange('about', e.target.value)}
            disabled={!editMode}
            className={`mt-1 block w-full px-3 py-2 border ${
              editMode ? 'border-gray-300' : 'border-transparent'
            } rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#00B4AA]`}
          />
        </div>

        {/* Social Links */}
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
          {['twitter', 'linkedin', 'github'].map((social) => (
            <div key={social}>
              <label className="block text-sm font-medium text-gray-700 capitalize">
                {social}
              </label>
              <input
                type="url"
                value={profile[social as keyof typeof profile]}
                onChange={(e) => handleChange(social, e.target.value)}
                disabled={!editMode}
                className={`mt-1 block w-full px-3 py-2 border ${
                  editMode ? 'border-gray-300' : 'border-transparent'
                } rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#00B4AA]`}
              />
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default ProfilePage;
